


https://github.com/PriyankaNigade18/JavaTrainingSA19




Variable syntax:
====================

datatype variablename=value
int x=100;

method syntax:
====================
accssmodifier returntype methodname()
{

}


public void show()
{

}
===============================
6-03-2024
============
Data types
------------
Type casting

Primitive to Object(valueOf())

primitive Object to primitive(intValue())

String object to primitive (parseInt())

primitive to String Object(valueOf)

====================================
11-03-2024
==============

this keyword
================
user to refer current class instance variable and instance method

-this keyword used to differentiate between instance and local variable
-used invoked method
-used to invoked any constructor
-used to invoked any class instance

==============================
13-03-2024
============
Assignments on ControlFlow

if-else
==========
1.Accept a number from user and validate it is even or odd number

2.Accept a number from user and validate it is positive or negative number


ladder if
============
3.Accept 4 numbers from user and print greater number 

Switch case
==============
4.Accept performance id from the user and print the result as per status
1.Poor Performance
2.Need to Improve
3:Good performance
4:Excellent performance
5:Employee of the year
===============

5.Print all even numbers upto 25
6.Print all odd numbers upro 50
7.accept number and check whether it is prime
(prime number which is divisible by 1 and itself)

pattern
============
1
12
123
1234


1
22
333
4444


1
23
456
78910

print() & println()
=======================
1
2
3
4
5678910










15-03-2024
=============
EnCapsulation
===================
1. Write a Java program to create a class called Person 
with private instance variables name, age. and country.
 Provide public getter and setter methods 
 to access and modify these variables.(PersonTest)



2. Write a Java program to create a class called BankAccount
 with private instance variables accountNumber and balance.
  Provide public getter and setter methods to 
  access and modify these variables.(BankAccountTest)


Polymorphism
===================
Implement Amazon payment gateway for Compile time polymorphism.
















Object
==============
classname ref_variablename=new constructor();

Class A
{
}

Object
============
A a1=new A();


=========================
	This Keyword,Super keyword & final keyword
	we can use in inheritance

This keyword is used to refer current class variable,method and constructor.

Super Keyword
============================
1.Super keyword can be used to refer immediate parent class instance variable.
2.Super keyword can be used to invoke immediate parent class method.
3.Super keyword can be used to call immediate parent class constructor.(super())

final Keyword
======================================
final keyword can be apply for variable,method and class
1.If we apply final keyword to variable then that variable will be consider constant variable
(value will become fix...no one can update)
2.If we apply final keyword to method then we cant override that method in other class or child class
3.If we apply final keyword to class then we can not extend that class into another class.
===============================================================
IQ: How we can implement immutable class ,variable or method in java?
Ans: Using final keyword.
==============================================================







Data Abstraction
================
It is process of hiding implementation 
details of software from end user.

Abstraction achieve using
------------------------------
1.Abstract class
2.Interface

1.Abstract class
===============
1.In abstract class we can have both abstract method and non abstract (concreate) Methods.
2.Abstract method and class we can declare using abstract keyword.
3.Abstract class can not be instantiated.
4.Abstract methods must be override by class which inherits abstract class.
5.Using Abstract class partial abstraction is possible.

Interface
===========
1.An interface in java is a blueprint of a class. 
2.Interface contains final and static variables.
3.Interface contains abstract methods.
4.An abstract method is a method contains definition but not body.
5.Methods in interface are public by default.
6.Interface supports the functionality of multiple inheritance.
7.We can define interface with interface keyword.
8.A class extends another class, an interface extends another interface
 but a class implements an interface.
9.We can create Object reference for Interface but we cannot instantiate interface.
10.Inheritance use extends keyword and Interface use implements keyword.



===========================================
Text File Handling
=====================
We can use File class in java to create a file object

To create a file Object
-----------------------
File fn=new File("path of file")

To create a file
--------------------
fn.createNewFile()

To write into file
-------------------
FileWriter wr=new FileWriter(file name)
wr.write("write file contents")
wr.close()

To read a file
-----------------
Scanner sc=new scanner(System.in)
while(sc.hasNext())
{
sc.next()

}

To delete a file
--------------
f1.delete()










































